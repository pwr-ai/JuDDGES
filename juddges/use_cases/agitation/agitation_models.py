from typing import List, Optional, Union

from pydantic import BaseModel


class JudgmentModel(BaseModel):
    case_id: Optional[str]
    court_type: Optional[str]
    court_location: Optional[str]
    case_date: Optional[str]
    docket_number: Optional[str]
    is_agitation_case: Optional[bool]
    art_111_cited: Optional[bool]
    legal_basis_description: Optional[str]
    additional_legal_basis: Optional[List[str]]
    applicant_type: Optional[str]
    applicant_name: Optional[str]
    applicant_political_affiliation: Optional[str]
    respondent_name: Optional[str]
    respondent_type: Optional[str]
    respondent_political_affiliation: Optional[str]
    election_type: Optional[str]
    election_date: Optional[str]
    electoral_material_present: Optional[bool]
    electoral_material_type: Optional[str]
    electoral_material_description: Optional[str]
    digital_material: Optional[bool]
    digital_material_type: Optional[str]
    digital_platform: Optional[str]
    digital_material_url: Optional[str]
    digital_material_reach: Optional[Union[str, int]]
    publication_date: Optional[str]
    case_outcome: Optional[str]
    # rectification_ordered: Optional[bool]
    # rectification_type: Optional[str]
    # rectification_deadline: Optional[str]
    financial_penalty: Optional[bool]
    financial_penalty_amount: Optional[Union[str, float]]
    agitation_present: Optional[bool]
    agitation_description: Optional[str]
    false_information_claim: Optional[bool]
    false_information_description: Optional[str]
    false_information_category: Optional[str]
    expert_testimony: Optional[bool]
    expert_field: Optional[str]
    case_duration: Optional[Union[str, int]]
    appeal_filed: Optional[bool]
    appeal_outcome: Optional[str]
    precedent_cited: Optional[bool]
    precedent_details: Optional[str]
